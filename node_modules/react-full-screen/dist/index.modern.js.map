{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useCallback, useState, useRef, useEffect } from 'react'\nimport fscreen from 'fscreen'\n\nexport interface FullScreenHandle {\n  active: boolean\n  enter: () => void\n  exit: () => void\n  node: React.MutableRefObject<HTMLDivElement | null>\n}\n\nexport interface FullScreenProps {\n  handle: FullScreenHandle\n  onChange?: (state: boolean, handle: FullScreenHandle) => void\n}\n\nexport function useFullScreenHandle(): FullScreenHandle {\n  const [active, setActive] = useState<boolean>(false)\n  const node = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    const handleChange = () => {\n      setActive(fscreen.fullscreenElement === node.current)\n    }\n    fscreen.addEventListener('fullscreenchange', handleChange)\n    return () => fscreen.removeEventListener('fullscreenchange', handleChange)\n  }, [])\n\n  const enter = useCallback(() => {\n    if (fscreen.fullscreenElement) {\n      fscreen.exitFullscreen().then(() => {\n        fscreen.requestFullscreen(node.current)\n      })\n    } else if (node.current) {\n      fscreen.requestFullscreen(node.current)\n    }\n  }, [])\n\n  const exit = useCallback(() => {\n    if (fscreen.fullscreenElement === node.current) {\n      fscreen.exitFullscreen()\n    }\n  }, [])\n\n  return {\n    active,\n    enter,\n    exit,\n    node\n  }\n}\n\nexport const FullScreen: React.FC<FullScreenProps> = ({\n  handle,\n  onChange,\n  children\n}) => {\n  const classNames = ['fullscreen']\n  if (handle.active) {\n    classNames.push('fullscreen-enabled')\n  }\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(handle.active, handle)\n    }\n  }, [handle.active])\n\n  return (\n    <div\n      className={classNames.join(' ')}\n      ref={handle.node}\n      style={handle.active ? { height: '100%', width: '100%' } : undefined}\n    >\n      {children}\n    </div>\n  )\n}\n"],"names":["useFullScreenHandle","useState","active","setActive","node","useRef","useEffect","handleChange","fscreen","fullscreenElement","current","addEventListener","removeEventListener","enter","useCallback","exitFullscreen","then","requestFullscreen","exit","FullScreen","handle","onChange","children","classNames","push","React","className","join","ref","style","height","width","undefined"],"mappings":";;;SAegBA;kBACcC,QAAQ,CAAU,KAAV;MAA7BC;MAAQC;;AACf,MAAMC,IAAI,GAAGC,MAAM,CAAwB,IAAxB,CAAnB;AAEAC,EAAAA,SAAS,CAAC;AACR,QAAMC,YAAY,GAAG,SAAfA,YAAe;AACnBJ,MAAAA,SAAS,CAACK,OAAO,CAACC,iBAAR,KAA8BL,IAAI,CAACM,OAApC,CAAT;AACD,KAFD;;AAGAF,IAAAA,OAAO,CAACG,gBAAR,CAAyB,kBAAzB,EAA6CJ,YAA7C;AACA,WAAO;AAAA,aAAMC,OAAO,CAACI,mBAAR,CAA4B,kBAA5B,EAAgDL,YAAhD,CAAN;AAAA,KAAP;AACD,GANQ,EAMN,EANM,CAAT;AAQA,MAAMM,KAAK,GAAGC,WAAW,CAAC;AACxB,QAAIN,OAAO,CAACC,iBAAZ,EAA+B;AAC7BD,MAAAA,OAAO,CAACO,cAAR,GAAyBC,IAAzB,CAA8B;AAC5BR,QAAAA,OAAO,CAACS,iBAAR,CAA0Bb,IAAI,CAACM,OAA/B;AACD,OAFD;AAGD,KAJD,MAIO,IAAIN,IAAI,CAACM,OAAT,EAAkB;AACvBF,MAAAA,OAAO,CAACS,iBAAR,CAA0Bb,IAAI,CAACM,OAA/B;AACD;AACF,GARwB,EAQtB,EARsB,CAAzB;AAUA,MAAMQ,IAAI,GAAGJ,WAAW,CAAC;AACvB,QAAIN,OAAO,CAACC,iBAAR,KAA8BL,IAAI,CAACM,OAAvC,EAAgD;AAC9CF,MAAAA,OAAO,CAACO,cAAR;AACD;AACF,GAJuB,EAIrB,EAJqB,CAAxB;AAMA,SAAO;AACLb,IAAAA,MAAM,EAANA,MADK;AAELW,IAAAA,KAAK,EAALA,KAFK;AAGLK,IAAAA,IAAI,EAAJA,IAHK;AAILd,IAAAA,IAAI,EAAJA;AAJK,GAAP;AAMD;IAEYe,UAAU,GAA8B,SAAxCA,UAAwC;MACnDC,cAAAA;MACAC,gBAAAA;MACAC,gBAAAA;AAEA,MAAMC,UAAU,GAAG,CAAC,YAAD,CAAnB;;AACA,MAAIH,MAAM,CAAClB,MAAX,EAAmB;AACjBqB,IAAAA,UAAU,CAACC,IAAX,CAAgB,oBAAhB;AACD;;AAEDlB,EAAAA,SAAS,CAAC;AACR,QAAIe,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACD,MAAM,CAAClB,MAAR,EAAgBkB,MAAhB,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,MAAM,CAAClB,MAAR,CAJM,CAAT;AAMA,SACEuB,mBAAA,MAAA;AACEC,IAAAA,SAAS,EAAEH,UAAU,CAACI,IAAX,CAAgB,GAAhB;AACXC,IAAAA,GAAG,EAAER,MAAM,CAAChB;AACZyB,IAAAA,KAAK,EAAET,MAAM,CAAClB,MAAP,GAAgB;AAAE4B,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAhB,GAAoDC;GAH7D,EAKGV,QALH,CADF;AASD;;;;"}